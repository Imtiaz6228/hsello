<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Contact Seller - <%= seller.store.name %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
    <style>
        .chat-container {
            height: 70vh;
            display: flex;
            flex-direction: column;
        }
        .chat-messages {
            flex: 1;
            overflow-y: auto;
            padding: 1.5rem;
            background: #f8f9fa;
            border: 1px solid #e0e0e0;
            border-radius: 12px;
            scrollbar-width: thin;
            scrollbar-color: #c0c0c0 #f8f9fa;
        }
        .chat-messages::-webkit-scrollbar {
            width: 6px;
        }
        .chat-messages::-webkit-scrollbar-track {
            background: #f8f9fa;
            border-radius: 3px;
        }
        .chat-messages::-webkit-scrollbar-thumb {
            background: #c0c0c0;
            border-radius: 3px;
        }
        .message {
            margin-bottom: 1rem;
            padding: 0.75rem 1rem;
            border-radius: 16px;
            max-width: 75%;
            animation: messageSlideIn 0.3s ease-out;
            box-shadow: 0 1px 2px rgba(0,0,0,0.1);
        }
        @keyframes messageSlideIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .message.sent {
            background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
            color: white;
            margin-left: auto;
            text-align: left;
            border-bottom-right-radius: 4px;
        }
        .message.received {
            background: white;
            border: 1px solid #e9ecef;
            color: #212529;
            margin-right: auto;
            border-bottom-left-radius: 4px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }
        .message:hover {
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(0,0,0,0.15);
        }
        .message-username {
            font-size: 0.875rem;
            font-weight: 600;
            margin-bottom: 0.25rem;
            color: rgba(255,255,255,0.9);
        }
        .message.sent .message-username {
            color: rgba(255,255,255,0.9);
        }
        .message.received .message-username {
            color: #495057;
        }
        .message-timestamp {
            font-size: 0.75rem;
            opacity: 0.7;
            margin-top: 0.25rem;
        }
        .chat-input-area {
            margin-top: 1rem;
            background: white;
            border: 1px solid #e0e0e0;
            border-radius: 12px;
            padding: 1rem;
        }
        .form-control:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0,123,255,0.25);
        }
        .file-preview {
            max-width: 200px;
            max-height: 200px;
            object-fit: cover;
            margin-top: 0.5rem;
            border-radius: 8px;
        }
        .file-message {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        .file-link {
            color: #007bff;
            text-decoration: none;
            font-weight: 500;
        }
        .file-link:hover {
            text-decoration: underline;
            color: #0056b3;
        }
    </style>
</head>
<body>
    <%- include('partials/navbar') %>

    <div class="container my-4">
        <div class="row">
            <div class="col-12">
                <!-- Store Info Header -->
                <div class="card mb-4">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <img src="/uploads/<%= seller.store.logo %>"
                                 alt="<%= seller.store.name %>"
                                 class="rounded-circle me-3"
                                 style="width: 50px; height: 50px; object-fit: cover;">
                            <div>
                                <h5 class="mb-0"><%= seller.store.name %></h5>
                                <small class="text-muted">Contact the seller for questions about their products</small>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Chat Container -->
                <div class="card">
                    <div class="card-body chat-container">
                        <div id="chatMessages" class="chat-messages">
                            <% messages.forEach(message => { %>
                                <div class="message <%= message.from == buyer.id ? 'sent' : 'received' %>">
                                    <div class="message-username">
                                        <%= message.from == buyer.id ? 'You' : message.fromName %>
                                    </div>
                                    <% if (message.type === 'text') { %>
                                        <div><%= message.message %></div>
                                    <% } else if (message.type === 'image') { %>
                                        <div class="file-message">
                                            <i class="fas fa-image text-success"></i>
                                            <a href="<%= message.fileUrl %>" target="_blank" class="file-link">
                                                <%= message.filename %>
                                            </a>
                                        </div>
                                        <img src="<%= message.fileUrl %>" alt="<%= message.filename %>" class="file-preview img-fluid rounded">
                                    <% } else if (message.type === 'file') { %>
                                        <div class="file-message">
                                            <i class="fas fa-file text-primary"></i>
                                            <a href="<%= message.fileUrl %>" target="_blank" class="file-link">
                                                <%= message.filename %>
                                            </a>
                                        </div>
                                    <% } %>
                                    <div class="message-timestamp">
                                        <%= new Date(message.timestamp).toLocaleString() %>
                                    </div>
                                </div>
                            <% }); %>
                        </div>

                        <!-- Message Input -->
                        <div class="chat-input-area">
                            <!-- File Upload (Hidden) -->
                            <input type="file" id="fileInput" class="d-none" accept="image/*,text/*,.pdf">

                            <!-- Message Form -->
                            <form id="messageForm" method="POST" action="/contact-seller/<%= seller.id %>" class="d-flex gap-2">
                                <input type="text" id="messageInput" name="message" class="form-control"
                                       placeholder="Type your message..." maxlength="500" autocomplete="off">
                                <button type="button" id="uploadBtn" class="btn btn-outline-secondary"
                                        title="Upload file">
                                    <i class="fas fa-paperclip"></i>
                                </button>
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-paper-plane"></i> Send
                                </button>
                            </form>

                            <!-- File Preview Area -->
                            <div id="filePreview" style="display: none;" class="mt-2"></div>

                            <!-- Upload Progress -->
                            <div id="uploadProgress" style="display: none;" class="mt-2">
                                <div class="progress">
                                    <div class="progress-bar progress-bar-striped progress-bar-animated"
                                         role="progressbar" style="width: 100%">
                                        Uploading...
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Flash Messages -->
    <% if (typeof success_msg !== 'undefined' && success_msg) { %>
        <div class="toast-container">
            <div class="toast align-items-center text-white bg-success show" role="alert">
                <div class="d-flex">
                    <div class="toast-body">
                        <i class="fas fa-check-circle me-2"></i><%= success_msg %>
                    </div>
                </div>
            </div>
        </div>
    <% } %>

    <% if (typeof error_msg !== 'undefined' && error_msg) { %>
        <div class="toast-container">
            <div class="toast align-items-center text-white bg-danger show" role="alert">
                <div class="d-flex">
                    <div class="toast-body">
                        <i class="fas fa-exclamation-triangle me-2"></i><%= error_msg %>
                    </div>
                </div>
            </div>
        </div>
    <% } %>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.socket.io/4.4.1/socket.io.min.js"></script>

    <script>
        const sellerId = '<%= seller.id %>';
        const buyerId = '<%= buyer.id %>';
        const messageForm = document.getElementById('messageForm');
        const messageInput = document.getElementById('messageInput');
        const fileInput = document.getElementById('fileInput');
        const uploadBtn = document.getElementById('uploadBtn');
        const filePreview = document.getElementById('filePreview');
        const uploadProgress = document.getElementById('uploadProgress');
        const chatMessages = document.getElementById('chatMessages');

        // Initialize Socket.IO
        const socket = io();

        // Join chat room
        socket.emit('join-chat', {
            sellerId: sellerId,
            buyerId: buyerId
        });

        // Auto-scroll to bottom
        function scrollToBottom() {
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        // Send message
        messageForm.addEventListener('submit', async (e) => {
            e.preventDefault();

            const message = messageInput.value.trim();
            if (!message) return;

            try {
                const response = await fetch(messageForm.action, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ message: message })
                });

                const result = await response.json();

                if (result.success) {
                    addMessageToChat(result.message);
                    messageInput.value = '';
                    messageInput.focus();
                    scrollToBottom();
                } else {
                    alert(result.message || 'Failed to send message');
                }
            } catch (error) {
                console.error('Error sending message:', error);
                alert('Error sending message. Please try again.');
            }
        });

        // File upload handler
        uploadBtn.addEventListener('click', () => {
            fileInput.click();
        });

        fileInput.addEventListener('change', async (e) => {
            const file = e.target.files[0];
            if (!file) return;

            // Show preview
            showFilePreview(file);

            // Upload file
            await uploadFile(file);
        });

        function showFilePreview(file) {
            const fileType = file.type.startsWith('image/') ? 'image' : 'file';

            if (fileType === 'image') {
                const reader = new FileReader();
                reader.onload = (e) => {
                    filePreview.innerHTML = `
                        <div class="alert alert-info">
                            <div class="d-flex align-items-center">
                                <i class="fas fa-image me-2"></i>
                                <span>${file.name}</span>
                                <button type="button" class="btn-close ms-auto" onclick="removeFilePreview()"></button>
                            </div>
                            <img src="${e.target.result}" class="file-preview img-fluid rounded mt-2">
                        </div>
                    `;
                };
                reader.readAsDataURL(file);
            } else {
                filePreview.innerHTML = `
                    <div class="alert alert-info">
                        <div class="d-flex align-items-center">
                            <i class="fas fa-file me-2"></i>
                            <span>${file.name} (${(file.size / 1024).toFixed(1)} KB)</span>
                            <button type="button" class="btn-close ms-auto" onclick="removeFilePreview()"></button>
                        </div>
                    </div>
                `;
            }

            filePreview.style.display = 'block';
        }

        async function uploadFile(file) {
            uploadProgress.style.display = 'block';

            const formData = new FormData();
            formData.append('file', file);

            try {
                const response = await fetch(`/contact-seller/${sellerId}/upload`, {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();

                if (result.success) {
                    addMessageToChat(result.message);
                    fileInput.value = '';
                    removeFilePreview();
                    scrollToBottom();
                } else {
                    alert(result.message || 'Failed to upload file');
                }
            } catch (error) {
                console.error('Error uploading file:', error);
                alert('Error uploading file. Please try again.');
            } finally {
                uploadProgress.style.display = 'none';
            }
        }

        function removeFilePreview() {
            filePreview.style.display = 'none';
            fileInput.value = '';
        }

        function addMessageToChat(message) {
            const messageElement = document.createElement('div');
            messageElement.className = 'message sent'; // Messages are from current user

            messageElement.innerHTML = `
                <div class="message-username">You</div>
                ${getMessageContent(message)}
                <div class="message-timestamp">${new Date(message.timestamp).toLocaleString()}</div>
            `;

            chatMessages.appendChild(messageElement);
        }

        function getMessageContent(message) {
            if (message.type === 'text') {
                return `<div>${message.message}</div>`;
            } else if (message.type === 'image') {
                return `
                    <div class="file-message">
                        <i class="fas fa-image text-success me-2"></i>
                        <a href="${message.fileUrl}" target="_blank" class="file-link">
                            ${message.filename}
                        </a>
                    </div>
                    <img src="${message.fileUrl}" alt="${message.filename}" class="file-preview img-fluid rounded mt-2">
                `;
            } else if (message.type === 'file') {
                return `
                    <div class="file-message">
                        <i class="fas fa-file text-primary me-2"></i>
                        <a href="${message.fileUrl}" target="_blank" class="file-link">
                            ${message.filename}
                        </a>
                    </div>
                `;
            }
            return message.message;
        }

        // Initialize
        document.addEventListener('DOMContentLoaded', () => {
            scrollToBottom();

            // Auto-refresh messages every 5 seconds
            setInterval(async () => {
                // For now, we'll reload the page to refresh messages
                // In production, you might want to implement polling or full WebSocket
                // location.reload();
            }, 5000);
        });

        // Enter key to send message
        messageInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                messageForm.dispatchEvent(new Event('submit'));
            }
        });
    </script>
</body>
</html>
